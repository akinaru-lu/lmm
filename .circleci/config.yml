version: 2.1

jobs:
  api:
    docker:
      - image: circleci/golang:1.12.0
        environment:
          GO111MODULE: 'on'
          MYSQL_HOST: localhost
          MYSQL_PORT: 3306
          MYSQL_NAME: lmm_test
          MYSQL_USER: root
          REDIS_SERVER: localhost:6379
          REDIS_CONN_TIMEOUT_SECOND: 3
          HTTP_TIMEOUT_SECOND: 3

      - image: circleci/mysql:5.7.25
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 1

      - image: circleci/redis:5.0.3-alpine3.9

    steps:
      - checkout

      - restore_cache:
          key: &api-go-mod-cache-key api-go-mod-{{ checksum ".circleci/config.yml" }}-{{ checksum "api/go/src/lmm/api/go.mod" }}-{{ checksum "api/go/src/lmm/api/go.sum" }}
          paths: &api-go-mod-cache-path /go/pkg

      - run:
          name: Setup API Go
          command: |
            cd api/go/src/lmm/api
            go mod download
            go install -v lmm/api/cmd/api
            go install -v lmm/api/cmd/cli

      - run:
          name: Setup API MySQL
          command: |
            sudo apt install -y mysql-client || true
            cat api/mysql/sql/init_test.sql | mysql -h localhost --protocol TCP -uroot
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - run:
          name: API Go Test
          command: |
            export LMM_API_TOKEN_KEY=$(cat /proc/sys/kernel/random/uuid | sed 's/-//g')

            cd api/go/src/lmm/api
            go test ./... -count 1 -cover -v

      - save_cache:
          key: *api-go-mod-cache-key
          paths: *api-go-mod-cache-path

workflows:
  version: 2.1
  test:
    jobs:
      - api
