version: 2.1

references:
  default: &default
    docker:
      - image: docker:17.05.0-ce-git
        environment:
          GO111MODULE: 'on'
    working_directory: &cwd /home/circleci/project

  golang112: &golang112
    docker:
      - image: circleci/golang:1.12.0
    working_directory: *cwd

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - &repo_cache_key repo-{{ .Branch }}-{{ .Revision }}
        - repo-{{ .Branch }}-
        - repo-

jobs:
  checkout_code:
    <<: *default
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cache_key
          paths: ".git"

  api_setup:
    <<: *golang112
    steps:
      - *restore_repo
      - checkout
      - restore_cache: &restore_api_go_mod
          key: &api-go-mod-cache-key api-go-mod-{{ checksum "api/go/src/lmm/api/go.mod" }}-{{ checksum "api/go/src/lmm/api/go.sum" }}
          paths: &api-go-mod-cache-path /go/pkg
      - run:
          name: api go mod download
          command: |
            cd api/go/src/lmm/api
            go mod download
      - save_cache:
          key: *api-go-mod-cache-key
          paths: *api-go-mod-cache-path

  api_test:
    docker:
      - image: circleci/golang:1.12.0
        environment:
          GO111MODULE: 'on'
          MYSQL_HOST: localhost
          MYSQL_PORT: 3306
          MYSQL_NAME: lmm_test
          MYSQL_USER: root
          HTTP_TIMEOUT_SECOND: 3

      - image: circleci/mysql:5.7.25
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 1

    steps:
      - *restore_repo
      - checkout
      - restore_cache: *restore_api_go_mod
      - run:
          name: Setup API MySQL
          command: |
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
            sudo apt install -y mysql-client || true
            cat api/mysql/sql/init_test.sql | mysql -h localhost --protocol TCP -uroot
      - run:
          name: API Go Test
          command: |
            export LMM_API_TOKEN_KEY=$(cat /proc/sys/kernel/random/uuid | sed 's/-//g')
            cd api/go/src/lmm/api
            go test ./... -count 1 -cover -v

workflows:
  version: 2.1
  test:
    jobs:
      - checkout_code
      - api_setup:
          requires:
            - checkout_code
      - api_test:
          requires:
            - checkout_code
            - api_setup
