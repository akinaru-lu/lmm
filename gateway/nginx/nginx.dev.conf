worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    include ./conf/options-ssl.conf;
    include ./modules/log_format.conf;

    index index.html;

    access_log /var/log/nginx/access.log json;

    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;

    include ./upstream/dev.conf;

    server {
        server_name www.lmm.local;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            proxy_pass http://app;
        }
    }

    server {
        client_max_body_size 10M;
        server_name api.lmm.local;
        listen 443 ssl;

        real_ip_header X-Forwarded-For;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            if ($http_origin ~* ^http[s]?:\/\/(.+\.)?lmm\.local$) {
                set $cors "${request_method}_CORS";
            }

            if ($cors = 'GET_CORS') {
                add_header 'Access-Control-Allow-Headers' 'Content-Type';
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Expose-Headers' 'Location';
            }

            if ($cors = 'POST_CORS') {
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Expose-Headers' 'Location';
            }

            if ($cors = 'PUT_CORS') {
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Expose-Headers' 'Location';
            }

            if ($cors = 'OPTIONS_CORS') {
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE';
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Expose-Headers' 'Location';
                add_header 'Access-Control-Max-Age' 86400;

                return 204;
            }

            proxy_pass http://api;
            proxy_set_header Host $http_host;
            proxy_set_header X-Request-Id $request_id;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    server {
        server_name asset.lmm.local;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            proxy_pass http://asset;
            proxy_set_header X-Request-Id $request_id;
        }
    }

    server {
        server_name manager.lmm.local;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            proxy_pass http://manager;
        }
    }

    server {
        server_name docs.lmm.local;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            proxy_pass http://docs;
        }
    }

    server {
        server_name rabbitmq.lmm.local;
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/lmm.local.crt;
        ssl_certificate_key /etc/nginx/ssl/lmm.local.key;

        location / {
            proxy_pass http://rabbitmq;
        }
    }

    server {
        if ($host = lmm.local) {
            return 301 https://www.lmm.local;
        }

        server_name lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = www.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name www.lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = api.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name api.lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = asset.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name asset.lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = manager.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name manager.lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = docs.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name docs.lmm.local;
        listen 80;

        return 404;
    }

    server {
        if ($host = rabbitmq.lmm.local) {
            return 301 https://$host$request_uri;
        }

        server_name rabbitmq.lmm.local;
        listen 80;

        return 404;
    }
}
